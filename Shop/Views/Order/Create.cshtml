@model Shop.Domain.Core.Product

@{
    ViewData["Title"] = "Создание заказа";
}

<h2>Создание</h2>

<div class="form-horizontal">
    <h4>Заказа</h4>
    <hr />

    <div class="form-group">
        <div class="col-md-10">
            <input class="form-control" type="text" id="nameProduct" placeholder="Название" value="@Model.Name" readonly />
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-10">
            <input class="form-control" type="text" id="price" placeholder="Цена" value="@Model.Price" readonly />
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-10">
            <select class="form-control" id="locationProduct" onchange="changeLocationProduct()">
                <option selected disabled>Выберите из списка</option>
                <option>Филиал</option>
                <option>Склад</option>
                <option>Доставка на дом</option>
            </select>
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-10">
            <select class="form-control" id="storageLocation" hidden></select>
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input class="btn btn-default" type="submit" onclick="Create()" value="Купить" />
        </div>
    </div>
</div>

<div>
    <a asp-controller="Product" asp-action="Index">Вернутся к списку</a>
</div>

<script>
    function changeLocationProduct() {
        while (storageLocation.firstChild)
            storageLocation.removeChild(storageLocation.firstChild);

        if (storageLocation.hidden == false)
            storageLocation.hidden = true;

        if (locationProduct.selectedIndex != 3) {
            var option = document.createElement("option");
            option.textContent = "Выберите из списка";
            option.selected = true;
            option.disabled = true;
            storageLocation.appendChild(option);
        }

        if (locationProduct.selectedIndex == 1) {
            getContext("BranchOffice", "GetBranchOffices")
                .then(response => response.json())
                .then(function (commits) {
                    if (commits != 0 && commits != null) {
                        commits.forEach(element => unpackingLocationProducts(element));
                    }
                    else {
                        unpackingLocationProducts();
                    }
                });
        }
        else if (locationProduct.selectedIndex == 2) {
            getContext("Storage", "GetStorages")
                .then(response => response.json())
                .then(function (commits) {
                    if (commits != 0 && commits != null) {
                        commits.forEach(element => unpackingLocationProducts(element));
                    }
                    else {
                        unpackingLocationProducts();
                    }
                });
        }
    }

    function unpackingLocationProducts(element) {
        if (element == undefined) {
            storageLocation.hidden = true;
            return;
        }

        storageLocation.hidden = false;

        var option = document.createElement("option");
        option.setAttribute("itemid", element.id);
        option.textContent = element.name +" (" + element.address + ")";
        storageLocation.appendChild(option);
    }

    function additionalPostContext() {
        if (locationProduct.selectedIndex == 3) {
            return postContext("Order", "Create", JSON.stringify({
                Order: {
                    Name: nameProduct.value,
                    Price: parseInt(price.value)
                },
                ProductId: @Model.Id
            }));
        }
        else {
            return postContext("Order", "Create", JSON.stringify({
                Order: {
                    Name: nameProduct.value,
                    Price: parseInt(price.value),
                    Address: storageLocation.options[storageLocation.selectedIndex].textContent
                },
                ProductId: @Model.Id
            }));
        }
        return;
    }

    function Create() {
        additionalPostContext()
            .then(response => response.json())
            .then(function (commit) {
                if (commit == "Success") {
                    alert("Добавлено!");
                    window.location.href = "/product";
                }
                else {
                    alert(commit);
                }
            });
    }
</script>